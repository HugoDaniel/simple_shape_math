function transformPoint1(m,v,dst){dst=dst||[0,0,0];const v0=v[0],v1=v[1],v2=v[2],d=v0*m[3]+v1*m[7]+v2*m[11]+m[15];return dst[0]=(v0*m[0]+v1*m[4]+v2*m[8]+m[12])/d,dst[1]=(v0*m[1]+v1*m[5]+v2*m[9]+m[13])/d,dst[2]=(v0*m[2]+v1*m[6]+v2*m[10]+m[14])/d,dst}function translation1(v,dst){return(dst=dst||new Float32Array(16))[0]=1,dst[1]=0,dst[2]=0,dst[3]=0,dst[4]=0,dst[5]=1,dst[6]=0,dst[7]=0,dst[8]=0,dst[9]=0,dst[10]=1,dst[11]=0,dst[12]=v[0],dst[13]=v[1],dst[14]=v[2],dst[15]=1,dst}function identityMatrix1(){const result=new Float32Array(16);return result[0]=1,result[5]=1,result[10]=1,result[15]=1,result}function ortho1({left:left,right:right,bottom:bottom,top:top,near:near,far:far},dst){return(dst=dst||new Float32Array(16))[0]=2/(right-left),dst[1]=0,dst[2]=0,dst[3]=0,dst[4]=0,dst[5]=2/(top-bottom),dst[6]=0,dst[7]=0,dst[8]=0,dst[9]=0,dst[10]=2/(near-far),dst[11]=0,dst[12]=(right+left)/(left-right),dst[13]=(top+bottom)/(bottom-top),dst[14]=(far+near)/(near-far),dst[15]=1,dst}function scale1(m,v,dst){dst=dst||new Float32Array(16);for(let i=0;i<4;i++)dst[0+i]=v[0]*m[0+i],dst[4+i]=v[1]*m[4+i],dst[8+i]=v[2]*m[8+i];return m!==dst&&(dst[12]=m[12],dst[13]=m[13],dst[14]=m[14],dst[15]=m[15]),dst}function translate1(m,v,dst){if(m!==(dst=dst||new Float32Array(16)))for(let i=0;i<12;i++)dst[i]=m[i];for(let i=0;i<4;i++)dst[12+i]=m[i]*v[0]+m[4+i]*v[1]+m[8+i]*v[2]+m[12+i];return dst}function multiply1(a,b,dst){dst=dst||new Float32Array(16);const a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=b[0],b01=b[1],b02=b[2],b03=b[3],b10=b[4],b11=b[5],b12=b[6],b13=b[7],b20=b[8],b21=b[9],b22=b[10],b23=b[11],b30=b[12],b31=b[13],b32=b[14],b33=b[15];return dst[0]=a00*b00+a10*b01+a20*b02+a30*b03,dst[1]=a01*b00+a11*b01+a21*b02+a31*b03,dst[2]=a02*b00+a12*b01+a22*b02+a32*b03,dst[3]=a03*b00+a13*b01+a23*b02+a33*b03,dst[4]=a00*b10+a10*b11+a20*b12+a30*b13,dst[5]=a01*b10+a11*b11+a21*b12+a31*b13,dst[6]=a02*b10+a12*b11+a22*b12+a32*b13,dst[7]=a03*b10+a13*b11+a23*b12+a33*b13,dst[8]=a00*b20+a10*b21+a20*b22+a30*b23,dst[9]=a01*b20+a11*b21+a21*b22+a31*b23,dst[10]=a02*b20+a12*b21+a22*b22+a32*b23,dst[11]=a03*b20+a13*b21+a23*b22+a33*b23,dst[12]=a00*b30+a10*b31+a20*b32+a30*b33,dst[13]=a01*b30+a11*b31+a21*b32+a31*b33,dst[14]=a02*b30+a12*b31+a22*b32+a32*b33,dst[15]=a03*b30+a13*b31+a23*b32+a33*b33,dst}export{transformPoint1 as transformPoint};export{translation1 as translation};export{identityMatrix1 as identityMatrix};export{ortho1 as ortho};export{scale1 as scale};export{translate1 as translate};export{multiply1 as multiply};